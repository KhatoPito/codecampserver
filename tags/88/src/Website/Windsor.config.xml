<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<facilities>
		<facility id="factory.support"
				  type="Castle.Facilities.FactorySupport.FactorySupportFacility, Castle.MicroKernel" />
	</facilities>

	<components>
		<!-- general -->
		<component id="clock"
				   service="CodeCampServer.Model.IClock, CodeCampServer.Model"
				   type="CodeCampServer.Model.Impl.SystemClock, CodeCampServer.Model" />

		<component id="httpcontext-factory"
				   type="CodeCampServer.Website.HttpContextFactory, CodeCampServer.Website" />

		<component id="httpcontextbase"
				   service="System.Web.HttpContextBase, System.Web.Abstractions"
				   type="System.Web.HttpContextBase, System.Web.Abstractions"
				   lifestyle="transient"
				   factoryId="httpcontext-factory"
				   factoryCreate="GetCurrentHttpContext" />

		<component id="session-builder"
				   service="CodeCampServer.DataAccess.ISessionBuilder, CodeCampServer.DataAccess"
				   type="CodeCampServer.DataAccess.Impl.HybridSessionBuilder, CodeCampServer.DataAccess"
				   lifestyle="singleton" />

		<!-- services -->
		<component id="login-service"
				   service="CodeCampServer.Model.Domain.ILoginService, CodeCampServer.Model"
				   type="CodeCampServer.Model.Impl.LoginService, CodeCampServer.Model"
				   lifestyle="transient" />

		<component id="user-session"
				 service="CodeCampServer.Model.IUserSession, CodeCampServer.Model"
				 type="CodeCampServer.Model.Impl.UserSession, CodeCampServer.Model"
				 lifestyle="transient" />

		<component id="authorization-service"
				   service="CodeCampServer.Model.Security.IAuthorizationService, CodeCampServer.Model"
				   type="CodeCampServer.Website.Security.AuthorizationService, CodeCampServer.Website"
				   lifestyle="transient" />

		<component id="authentication-service"
				   service="CodeCampServer.Model.Security.IAuthenticationService, CodeCampServer.Model"
				   type="CodeCampServer.Website.Security.AuthenticationService, CodeCampServer.Website"
				   lifestyle="transient" />

		<component id="conference-service"
				   service="CodeCampServer.Model.IConferenceService, CodeCampServer.Model"
				   type="CodeCampServer.Model.Impl.ConferenceService, CodeCampServer.Model"
				   lifestyle="transient"/>

		<!-- repositories -->
		<component id="conference-repository"
				   service="CodeCampServer.Model.Domain.IConferenceRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.ConferenceRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

		<component id="person-repository"
				   service="CodeCampServer.Model.Domain.IPersonRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.PersonRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

		<component id="session-repository"
				   service="CodeCampServer.Model.Domain.ISessionRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.SessionRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

		<component id="timeslot-repository"
				   service="CodeCampServer.Model.Domain.ITimeSlotRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.TimeSlotRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

    <component id="track-repository"
				   service="CodeCampServer.Model.Domain.ITrackRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.TrackRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

	</components>
</configuration>