<#@ template language="C#" HostSpecific="True" debug="true" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Windows.Forms" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="System.IO" #>

<#
MvcTextTemplateHost mvcHost = (MvcTextTemplateHost)(Host);
Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost host = (Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost)(Host);
string templateDirectory = Path.GetDirectoryName(host.TemplateFile);
#>
<#
WriteUnitTest(mvcHost);
string fileName = String.Format(@"..\..\..\UnitTests\UI\Controllers\{0}Tester.cs", mvcHost.ItemName);
string filePath = Path.Combine(templateDirectory ,fileName);
File.WriteAllText(filePath , this.GenerationEnvironment.ToString());
this.GenerationEnvironment.Remove(0, this.GenerationEnvironment.Length);
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;

namespace <#= mvcHost.NameSpace #>
{
    public class <#= mvcHost.ItemName #> : Controller
    {
        //
        // GET: /<#= mvcHost.ControllerRootName #>/

        public ActionResult Index()
        {
            return View();
        }

<#
if(mvcHost.ExtraActionMethods) {
#>
        //
        // GET: /<#= mvcHost.ControllerRootName #>/Details/5

        public ActionResult Details(int id)
        {
            return View();
        }

        //
        // GET: /<#= mvcHost.ControllerRootName #>/Create

        public ActionResult Create()
        {
            return View();
        } 

        //
        // POST: /<#= mvcHost.ControllerRootName #>/Create

        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult Create(FormCollection collection)
        {
            try
            {
                // TODO: Add insert logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        //
        // GET: /<#= mvcHost.ControllerRootName #>/Edit/5
 
        public ActionResult Edit(int id)
        {
            return View();
        }

        //
        // POST: /<#= mvcHost.ControllerRootName #>/Edit/5

        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult Edit(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add update logic here
 
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }
<#
}
#>
    }
}

<#+ public void WriteUnitTest(MvcTextTemplateHost mvcHost)
{ 
#>
using System;
using System.Web.Mvc;
using CodeCampServer.Core.Domain;
using CodeCampServer.Core.Domain.Model;
using CodeCampServer.Infrastructure.UI.Services.Impl;
using CodeCampServer.UI.Controllers;
using CodeCampServer.UI.Helpers.Mappers;
using CodeCampServer.UI.Models.Forms;
using MvcContrib.TestHelper;
using NBehave.Spec.NUnit;
using NUnit.Framework;
using Rhino.Mocks;

namespace CodeCampServer.UnitTests.UI.Controllers
{
	public class <#= mvcHost.ItemName #>Tester : SaveControllerTester
	{
		[Test]
		public void Delete_should_delete_a_entity_and_render_index()
		{
			var entity = new <#= mvcHost.ControllerRootName #> {};
			var repository = S<I<#= mvcHost.ControllerRootName #>Repository>();
			var mapper = S<I<#= mvcHost.ControllerRootName #>Mapper>();
			var controller = new <#= mvcHost.ControllerRootName #>(repository,mapper);

			ActionResult result = controller.Delete(entity);

			repository.AssertWasCalled(x => x.Delete(entity));
			result
				.AssertActionRedirect()
				.ToAction<<#= mvcHost.ItemName #>>(x => x.Index(null));
		}
	}
}
<#+ } #>
