<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<facilities>
		<facility id="factory.support"
				  type="Castle.Facilities.FactorySupport.FactorySupportFacility, Castle.MicroKernel" />
	</facilities>

	<components>
		<!-- general -->
		<component id="IClock"
				   service="CodeCampServer.Model.IClock, CodeCampServer.Model"
				   type="CodeCampServer.Model.Impl.SystemClock, CodeCampServer.Model" />

		<component id="IHttpContextProvider"
				   service="CodeCampServer.Website.IHttpContextProvider, CodeCampServer.Website"
				   type="CodeCampServer.Website.HttpContextProvider, CodeCampServer.Website" />

		<component id="ISessionBuilder"
				       service="CodeCampServer.DataAccess.ISessionBuilder, CodeCampServer.DataAccess"
				       type="CodeCampServer.DataAccess.Impl.HybridSessionBuilder, CodeCampServer.DataAccess"
				       lifestyle="singleton" />

		<component id="ICryptoUtil"
				   service="CodeCampServer.Model.ICryptoUtil, CodeCampServer.Model"
				   type="CodeCampServer.Model.Impl.CryptoUtil, CodeCampServer.Model" />

		<!-- services -->
		<component id="IUserSession"
				 service="CodeCampServer.Model.IUserSession, CodeCampServer.Model"
				 type="CodeCampServer.Model.Impl.UserSession, CodeCampServer.Model"
				 lifestyle="transient" />

		<component id="IAuthenticationService"
				   service="CodeCampServer.Model.Security.IAuthenticationService, CodeCampServer.Model"
				   type="CodeCampServer.Website.Security.AuthenticationService, CodeCampServer.Website"
				   lifestyle="transient" />

		<component id="IConferenceService"
				   service="CodeCampServer.Model.IConferenceService, CodeCampServer.Model"
				   type="CodeCampServer.Model.Impl.ConferenceService, CodeCampServer.Model"
				   lifestyle="transient"/>

		<!-- repositories -->
		<component id="IConferenceRepository"
				   service="CodeCampServer.Model.Domain.IConferenceRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.ConferenceRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

		<component id="IPersonRepository"
				   service="CodeCampServer.Model.Domain.IPersonRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.PersonRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

		<component id="session-repository"
				   service="CodeCampServer.Model.Domain.ISessionRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.SessionRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

		<component id="ITimeSlotRepository"
				   service="CodeCampServer.Model.Domain.ITimeSlotRepository, CodeCampServer.Model"
				   type="CodeCampServer.DataAccess.Impl.TimeSlotRepository, CodeCampServer.DataAccess"
				   lifestyle="transient"/>

		<component id="ITrackRepository"
					   service="CodeCampServer.Model.Domain.ITrackRepository, CodeCampServer.Model"
					   type="CodeCampServer.DataAccess.Impl.TrackRepository, CodeCampServer.DataAccess"
					   lifestyle="transient"/>

	</components>
</configuration>
