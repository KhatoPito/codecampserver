<?xml version="1.0" encoding="utf-8"?>

<!--EXTERNAL_PROPERTIES: driver.class;connection.string;website.target.dir;dialect;local.connection.string;-->
<project name="CodeCampServer" default="deploy" xmlns="http://nant.sf.net/release/0.85-rc4/nant.xsd">

  <property name="nant.settings.currentframework" value="net-3.5" />

  <!-- Database migration settings -->
  <property name="database.script.directory" value="Database" />

  <target name="deploy">

    <call target="rebuildDatabase" if="${should.reload.database}" />

		<echo message="STEP 1 - Configuring ${project::get-name()}..." />

		<property name="driver.class.path" value="//*/hbm:property[@name='connection.driver_class']" />
    <property name="connection.string.path" value="//*/hbm:property[@name='connection.connection_string']" />
    <property name="dialect.path" value="//*/hbm:property[@name='dialect']" />

    <!-- Poke website config -->
    <xmlpoke file="website/bin/hibernate.cfg.xml"	xpath="${driver.class.path}" value="${driver.class}">
      <namespaces>
        <namespace prefix="hbm" uri="urn:nhibernate-configuration-2.2"></namespace>
      </namespaces>
    </xmlpoke>
    <xmlpoke file="website/bin/hibernate.cfg.xml"	xpath="${connection.string.path}"	value="${local.connection.string}">
      <namespaces>
        <namespace prefix="hbm" uri="urn:nhibernate-configuration-2.2"></namespace>
      </namespaces>
    </xmlpoke>
    <xmlpoke file="website/bin/hibernate.cfg.xml"	xpath="${dialect.path}"	value="${dialect}">
      <namespaces>
        <namespace prefix="hbm" uri="urn:nhibernate-configuration-2.2"></namespace>
      </namespaces>
    </xmlpoke>

    
		<!-- Poke database and test config -->
    <xmlpoke file="database/hibernate.cfg.xml" xpath="${driver.class.path}"	value="${driver.class}">
      <namespaces>
        <namespace prefix="hbm" uri="urn:nhibernate-configuration-2.2"></namespace>
      </namespaces>
    </xmlpoke>

    <xmlpoke file="database/hibernate.cfg.xml" xpath="${connection.string.path}" value="${connection.string}">
      <namespaces>
        <namespace prefix="hbm" uri="urn:nhibernate-configuration-2.2"></namespace>
      </namespaces>
    </xmlpoke>

    <xmlpoke file="database/hibernate.cfg.xml" xpath="${dialect.path}" value="${dialect}">
      <namespaces>
        <namespace prefix="hbm" uri="urn:nhibernate-configuration-2.2"></namespace>
      </namespaces>
    </xmlpoke>


		<echo message="STEP 3 - Rebuilding Transactional Database..." />

	<nunit2 failonerror="true" verbose="true">
      <formatter type="Plain" />
      <test assemblyname="database/${project::get-name()}.IntegrationTests.dll">
        <categories>
          <include name="SchemaDrop" />
          <exclude name="*" />
        </categories>
      </test>
    </nunit2>
    <nunit2 failonerror="true" verbose="true">
      <formatter type="Plain" />
      <test assemblyname="database/${project::get-name()}.IntegrationTests.dll">
        <categories>
          <include name="SchemaExport" />
          <exclude name="*" />
        </categories>
      </test>
    </nunit2>

    <echo message="STEP 4 - Populating Transactional Database with Test Data..." />

    <nunit2 failonerror="true" verbose="true">
      <formatter type="Plain" />
      <test assemblyname="database/${project::get-name()}.IntegrationTests.dll">
        <categories>
          <include name="DataLoader"/>
          <exclude name="*"/>
        </categories>
      </test>
    </nunit2>

		<echo message="STEP 5 - Removing Existing ${project::get-name()} Application Files..." />

		<delete dir="${website.target.dir}" />
		
		<echo message="STEP 6 - Deploying ${project::get-name()} Application Files..." />

		<!-- Copy files to the target machine -->
    <copy todir="${website.target.dir}" overwrite="true" includeemptydirs="true" >
      <fileset basedir="website">
        <include name="**" />
      </fileset>
    </copy>
  </target>

  <!-- Database change management -->
  <target name="rebuildDatabase" depends="dropDatabase, createDatabase" />

  <target name="updateDatabase">
    <property name="action" value="Update" />
    <call target="manageSqlDatabase" />
  </target>

  <target name="createDatabase">
    <property name="action" value="Create" />
    <call target="manageSqlDatabase" />
  </target>

  <target name="dropDatabase">
    <property name="action" value="Drop" />
    <call target="manageSqlDatabase" failonerror="false"/>
  </target>

  <target name="manageSqlDatabase">
    <echo message="database server: ${database.server}" />
    <manageSqlDatabase
			scriptDirectory="${database.script.directory}"
			action="${action}"
			server="${database.server}"
			integratedAuthentication="${database.integrated}"
			database="${database.name}"
      username="${database.username}"
      password="${database.password}"
		/>

    <if test="${action != 'Drop'}">
      <echo message="Current Database Version: ${usdDatabaseVersion}" />
    </if>

  </target>
</project>