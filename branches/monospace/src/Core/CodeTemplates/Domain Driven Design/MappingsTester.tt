<#@ template language="C#" HostSpecific="True" debug="true" #>
<#@ output extension=".cs" #>
<#
	string solutionNamespace = projectDefaultNamespace.Replace(".Core",""); 
	string entityName = model.Name;	
	OutputFilePath = String.Format(@"{1}..\IntegrationTests\Infrastructure\DataAccess\Mappings\{0}MappingsTester.cs",entityName,projectDirectory);
#>
using System.Data;
using <#=solutionNamespace#>.Core.Domain.Model;
using NHibernate;
using NUnit.Framework;
using NUnit.Framework.SyntaxHelpers;

namespace <#=solutionNamespace#>.IntegrationTests.Infrastructure.DataAccess.Mappings
{
    [TestFixture]
    public class <#=entityName#>MappingsTester : DataTestBase
    {
        [Test]
        public void Should_map_<#=entityName#>()
        {
            var entity = new <#=entityName#>
                        {
<# foreach(ModelProperty property in model.Properties) 
{#>
							<#= property.Name #>= <#= GetTestValue(property.ModelType) #> ,
<# } #>                                                  
                        };
            AssertObjectCanBePersisted(entity);
        }
    }
}
<#+ 

	public int counter=0;
	public string GetTestValue(ModelType type)
	{
		counter++;
		if(type.Namespace.StartsWith("System.Boolean"))
		{
			return "true";
		}
		else if(!type.Namespace.StartsWith("System."))
		{
			return "new " + type.Name +"()";
		} 
		else 
		{
			return  "\"test value string " + counter + "\"";
		}
		
	}
 #>