<?xml version="1.0" encoding="utf-8"?>
<!--EXTERNAL_PROPERTIES: usdDatabaseVersion-->
<!--EXTERNAL_PROPERTIES: CCNetLabel-->
<project name="CodeCampServer" default="build" xmlns="http://nant.sf.net/release/0.85/nant.xsd">
	<property name="solution.dir" value="src"/>
	<property name="solution.file" value="${solution.dir}/${project::get-name()}.sln"/>
	<property name="database.dir" value="${solution.dir}/DataAccess/Database"/>
	<property name="website.dir" value="${solution.dir}/Website"/>
	<property name="trunk.dir" value="."/>
	<property name="company.name" value="${project::get-name()}"/>
	<property name="bin.dir" value="bin" />
	<property name="build.base" value="build"/>
	<property name="results.dir" value="${build.base}\results" />
	<property name="version.major" value="1"/>
	<property name="version.minor" value="0"/>
	<property name="version.build" value="0"/>
	<property name="version.revision" value="0"/>
	<property name="project.fullversion" value="${version.major}.${version.minor}.${version.build}.${version.revision}" dynamic="true" />
	<property name="database.server" value="localhost\sqlexpress"/>
	<property name="database.name" value="${project::get-name()}"/>
	<property name="nant.settings.currentframework" value="net-3.5" />
	<property name="debug.show_sql" value="false" />
  
	<!-- default configuration -->
	<property name="project.config" value="release" />
	<!-- debug|release -->
	<property name="build.dir" value="${build.base}/${nant.settings.currentframework}.${platform::get-name()}-${project::get-name()}-${project.config}/"/>
		
	<!-- allow machine-specific settings to be overridden -->
	<if test="${file::exists('config\local-properties.xml')}">
		<echo message="Loading config\local-properties.xml" />
    <include buildfile="config\local-properties.xml" />       
  </if>

	<target name="build" depends="config, clean, version, init, commonassemblyinfo, compile, move-for-test, drop-database, create-database, test"/>
	<target name="cruise" depends="config, build, package"/>
	<target name="builddatabase" depends="config, init, drop-database, create-database" />
	
	<target name="config" description="Generates necessary config files based on local settings">
    <copy file="config\nhibernate-default.cfg.xml.template" tofile="src\nhibernate-default.cfg.xml.temp">
      <filterchain>
        <replacetokens>
          <token key="SERVER" value="${database.server}" />
          <token key="DBNAME" value="${database.name}" />
          <token key="SHOW_SQL" value="${debug.show_sql}" />
        </replacetokens>
      </filterchain>
    </copy>
	</target>

	<target name="init" description="Initializes build properties">
		<tstamp>
			<formatter property="datetime.buildtime" pattern="yyyy-MM-dd, HH:mm:ss" />
		</tstamp>

		
		<mkdir dir="${build.dir}" />
		<echo message="Current Directory: ${project::get-base-directory()}"/>
	</target>

	<target name="clean" description="delete build artifacts">
		<delete dir="${build.dir}" failonerror="false" />
	</target>

	<target name="version" description="mark AssemblyInfo builds with the build number">
		<if test="${property::exists('CCNetLabel')}">
			<property name="version.revision" value="${CCNetLabel}"/>
		</if>
	</target>

	<target name="commonassemblyinfo" depends="version, init">
		<echo message="MARKING THIS BUILD AS VERSION ${project.fullversion}" />
		<delete file="${solution.dir}/CommonAssemblyInfo.cs" failonerror="false"/>
		<asminfo output="${solution.dir}/CommonAssemblyInfo.cs" language="CSharp">
			<imports>
				<import namespace="System" />
				<import namespace="System.Reflection" />
				<import namespace="System.Runtime.InteropServices" />
			</imports>
			<attributes>
				<attribute type="ComVisibleAttribute" value="false" />
				<attribute type="AssemblyVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyFileVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyCopyrightAttribute" value="Copyright Â© ${company.name} 2007-${datetime::get-year(datetime::now())}" />
				<attribute type="AssemblyProductAttribute" value="${project::get-name()}" />
				<attribute type="AssemblyCompanyAttribute" value="${company.name}" />
				<attribute type="AssemblyConfigurationAttribute" value="${project.config}" />
				<attribute type="AssemblyInformationalVersionAttribute" value="${project.fullversion}" />
			</attributes>
			<references>
				<include name="System.dll" />
			</references>
		</asminfo>
	</target>

	<target name="drop-database">
		<echo message="Dropping database ${database.name}..."/>
		<updateSqlDatabase action="Drop" database="${database.name}" server="${database.server}" failonerror="false" />
	</target>

	<target name="create-database" depends="version, init">
		<echo message="Creating database ${database.name}..."/>
		<updateSqlDatabase scriptDirectory="${database.dir}" action="Create" server="${database.server}" database="${database.name}" />
		<echo message="Current Database Version: ${usdDatabaseVersion}" />
	</target>

	<target name="update-database">
		<echo message="Updating database..."/>
		<updateSqlDatabase scriptDirectory="${database.dir}" action="Update" server="${database.server}" database="${database.name}" />
		<echo message="Current Database Version: ${usdDatabaseVersion}" />
	</target>

	<target name="compile" depends="init">
		<echo message="Build Directory is ${build.dir}" />
		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe"
				  commandline="${solution.file} /t:Clean /p:Configuration=${project.config} /v:q" workingdir="." />
		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe"
				  commandline="${solution.file} /t:Rebuild /p:Configuration=${project.config} /v:q" workingdir="." />
	</target>

	<target name="move-for-test">
		<copy todir="${build.dir}" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="/**/bin/${project.config}/**" />
				<include name="/**/Website/bin/**" />
				<include name="*.config"/>
				<include name="*.cfg.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="test" depends="init">
		<delete dir="${results.dir}" if="${directory::exists('${results.dir}')}" />
		<mkdir dir="${results.dir}"/>

		<nunit2 failonerror="true" verbose="true">
			<formatter type="Xml" outputdir="${results.dir}" usefile="true" extension=".xml"/>
			<formatter type="Plain" />
			<test assemblyname="${build.dir}/${project::get-name()}.UnitTests.dll" appconfig="${nant::get-base-directory()}nant.tests.config"/>
		</nunit2>
		
		<nunit2 failonerror="true" verbose="true">
			<formatter type="Xml" outputdir="${results.dir}" usefile="true" extension=".xml"/>
			<formatter type="Plain" />
			<test assemblyname="${build.dir}/${project::get-name()}.IntegrationTests.dll" appconfig="${nant::get-base-directory()}nant.tests.config">
				<categories>
					<exclude name="DataLoader"/>
					<exclude name="CreateSchema"/>
				</categories>
			</test>
		</nunit2>

		<echo message="DATA LOADING"/>
		<nunit2 failonerror="true" verbose="true">
			<formatter type="Xml" outputdir="${results.dir}" usefile="true" extension=".xml"/>
			<formatter type="Plain" />
			<test assemblyname="${build.dir}/${project::get-name()}.IntegrationTests.dll" appconfig="${nant::get-base-directory()}nant.tests.config">
				<categories>
					<include name="DataLoader"/>
				</categories>
			</test>
		</nunit2>
	</target>

	<target name="package">
		<zip zipfile="${build.base}/${project::get-name()}.zip" includeemptydirs="false" >
			<fileset basedir="${website.dir}">
				<exclude name="**/*.cs"/>
				<exclude name="**/*.csproj*"/>
				<exclude name="**/obj/**"/>
				<include name="**/*.*"/>
			</fileset>
		</zip>
	</target>

</project>
